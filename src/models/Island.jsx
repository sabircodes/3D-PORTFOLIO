/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Jellepostma (https://sketchfab.com/Jellepostma)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/japanese-restaurant-inakaya-97594e92c418491ab7f032ed2abbf596
Title: Japanese Restaurant "Inakaya"
*/

import React, { useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame, useThree } from "@react-three/fiber";
import { a } from '@react-spring/three'

import islandScene from '../assets/3d/island4.glb'

const Island = (  {isRotating,setIsRotating,setCurrentStage,...props}) => {
   const islandRef = useRef();
  // Get access to the Three.js renderer and viewport
  const { gl, viewport } = useThree();
  const { nodes, materials } = useGLTF(islandScene);

   // Use a ref for the last mouse x position
   const lastX = useRef(0);
   // Use a ref for rotation speed
   const rotationSpeed = useRef(0);
   // Define a damping factor to control rotation damping
   const dampingFactor = 0.97;

    // Handle pointer (mouse or touch) down event
  const handlePointerDown = (event) => {
    event.stopPropagation();
    event.preventDefault();
    setIsRotating(true);

    // Calculate the clientX based on whether it's a touch event or a mouse event
    const clientX = event.touches ? event.touches[0].clientX : event.clientX;

    // Store the current clientX position for reference
    lastX.current = clientX;
  };

  // Handle pointer (mouse or touch) up event
  const handlePointerUp = (event) => {
    event.stopPropagation();
    event.preventDefault();
    setIsRotating(false);
  };

  // Handle pointer (mouse or touch) move event
  const handlePointerMove = (event) => {
    event.stopPropagation();
    event.preventDefault();
    if (isRotating) {
      // If rotation is enabled, calculate the change in clientX position
      const clientX = event.touches ? event.touches[0].clientX : event.clientX;

      // calculate the change in the horizontal position of the mouse cursor or touch input,
      // relative to the viewport's width
      const delta = (clientX - lastX.current) / viewport.width;

      // Update the island's rotation based on the mouse/touch movement
      islandRef.current.rotation.y += delta * 0.01 * Math.PI;

      // Update the reference for the last clientX position
      lastX.current = clientX;

      // Update the rotation speed
      rotationSpeed.current = delta * 0.01 * Math.PI;
    }
  };
   // Handle keydown events
   const handleKeyDown = (event) => {
    if (event.key === "ArrowLeft") {
      if (!isRotating) setIsRotating(true);

      islandRef.current.rotation.y += 0.005 * Math.PI;
      rotationSpeed.current = 0.007;
    } else if (event.key === "ArrowRight") {
      if (!isRotating) setIsRotating(true);

      islandRef.current.rotation.y -= 0.005 * Math.PI;
      rotationSpeed.current = -0.007;
    }
  };

  // Handle keyup events
  const handleKeyUp = (event) => {
    if (event.key === "ArrowLeft" || event.key === "ArrowRight") {
      setIsRotating(false);
    }
  };

  useEffect(() => {
    // Add event listeners for pointer and keyboard events
    const canvas = gl.domElement;
    canvas.addEventListener("pointerdown", handlePointerDown);
    canvas.addEventListener("pointerup", handlePointerUp);
    canvas.addEventListener("pointermove", handlePointerMove);
    window.addEventListener("keydown", handleKeyDown);
    window.addEventListener("keyup", handleKeyUp);

    // Remove event listeners when component unmounts
    return () => {
      canvas.removeEventListener("pointerdown", handlePointerDown);
      canvas.removeEventListener("pointerup", handlePointerUp);
      canvas.removeEventListener("pointermove", handlePointerMove);
      window.removeEventListener("keydown", handleKeyDown);
      window.removeEventListener("keyup", handleKeyUp);
    };
  }, [gl, handlePointerDown, handlePointerUp, handlePointerMove]);


   // This function is called on each frame update
   useFrame(() => {
    // If not rotating, apply damping to slow down the rotation (smoothly)
    if (!isRotating) {
      // Apply damping factor
      rotationSpeed.current *= dampingFactor;

      // Stop rotation when speed is very small
      if (Math.abs(rotationSpeed.current) < 0.001) {
        rotationSpeed.current = 0;
      }

      islandRef.current.rotation.y += rotationSpeed.current;
    } else {
      // When rotating, determine the current stage based on island's orientation
      const rotation = islandRef.current.rotation.y;

      /**
       * Normalize the rotation value to ensure it stays within the range [0, 2 * Math.PI].
       * The goal is to ensure that the rotation value remains within a specific range to
       * prevent potential issues with very large or negative rotation values.
       *  Here's a step-by-step explanation of what this code does:
       *  1. rotation % (2 * Math.PI) calculates the remainder of the rotation value when divided
       *     by 2 * Math.PI. This essentially wraps the rotation value around once it reaches a
       *     full circle (360 degrees) so that it stays within the range of 0 to 2 * Math.PI.
       *  2. (rotation % (2 * Math.PI)) + 2 * Math.PI adds 2 * Math.PI to the result from step 1.
       *     This is done to ensure that the value remains positive and within the range of
       *     0 to 2 * Math.PI even if it was negative after the modulo operation in step 1.
       *  3. Finally, ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI) applies another
       *     modulo operation to the value obtained in step 2. This step guarantees that the value
       *     always stays within the range of 0 to 2 * Math.PI, which is equivalent to a full
       *     circle in radians.
       */
      const normalizedRotation =
        ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);

      // Set the current stage based on the island's orientation
      switch (true) {
        case normalizedRotation >= 5.45 && normalizedRotation <= 5.85:
          setCurrentStage(4);
          break;
        case normalizedRotation >= 0.85 && normalizedRotation <= 1.3:
          setCurrentStage(3);
          break;
        case normalizedRotation >= 2.4 && normalizedRotation <= 2.6:
          setCurrentStage(2);
          break;
        case normalizedRotation >= 4.25 && normalizedRotation <= 4.75:
          setCurrentStage(1);
          break;
        default:
          setCurrentStage(null);
      }
    }
  });

    return (
      <a.group  ref={islandRef} {...props} >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.MainIsland_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging33_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_0}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging32_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging31_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_2}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging30_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_3}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging29_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_4}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging26_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_5}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging25_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_6}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging18_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_7}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging28_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_8}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging27_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_9}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging24_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_10}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging23_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_11}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging22_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_12}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging21_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_13}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging20_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_14}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_15}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging16_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_16}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging15_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_17}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging19_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_18}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging17_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_19}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging14_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_20}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging13_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_21}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging9_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_22}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging8_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_23}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging12_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_24}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging11_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_25}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging10_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_26}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging4_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_27}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging3_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_28}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging7_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_29}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging6_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_30}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging5_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_31}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging2_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_32}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeHanging1_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_33}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder47_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_34}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder46_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_35}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder45_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_36}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeLong_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_37}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RopeLong1_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_38}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder44_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_39}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder43_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_40}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder39_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_41}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder38_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_42}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder42_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_43}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder41_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_44}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder40_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_45}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder37_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_46}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder36_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_47}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCylinder32_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_48}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Rope48_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_49}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Ropewood2_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_50}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Robewood_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_51}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCube14_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_52}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bridge1_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_53}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube4_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube5_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_0}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube8_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_1}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube9_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_2}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube2_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_3}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube6_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_4}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube7_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_5}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bridgepole_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_54}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bridgepole1_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_55}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bridgepole2_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_56}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube3_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_6}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.StonespCube1_StonesinitialShadingGroup_0.geometry}
        material={materials.StonesinitialShadingGroup_7}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bridgepole3_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_57}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Rubble1_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_58}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCube7_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_59}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bush_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_60}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bush1_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_61}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TreeLeafs_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_62}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Tree_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_63}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Rubble_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_64}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Bush2_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_65}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pCube108_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_66}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bush_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_67}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Rubble2_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_68}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.TreeRoots_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_69}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.RoutteIsland_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_70}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BridgeIslandSmall_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_71}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.BridgeislandBig_initialShadingGroup_0.geometry}
        material={materials.initialShadingGroup_72}
      />
    </a.group>
    );
}


export default Island;